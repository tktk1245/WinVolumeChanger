<Window x:Class="WinVolumeChanger.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:WinVolumeChanger.Views"
        xmlns:vm="clr-namespace:WinVolumeChanger.ViewModels"
        Title="MainWindow" Height="300" Width="220"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        ResizeMode="NoResize"
        x:Name="myWindow">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="./Resources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    
    <i:Interaction.Triggers>
    
    	<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
    	<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
    	<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています --> 
        
        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid Background="#C0778899">
        <Grid Width="50" Height="30" Margin="0,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" Opacity="0.9">
            <Button Style="{StaticResource CloseButtonStyle}" Click="CloseButton_Click"/>
        </Grid>
        <Grid Width="100" Height="100" Margin="0,40,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" Opacity="0.9">
            <Grid Width="100" Height="20"  HorizontalAlignment="Center" VerticalAlignment="Top" Background="LightSkyBlue">
                <TextBlock Text="Sound Volume" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            </Grid>
            <Grid Width="100" Height="80" Margin="0,20,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" Background="AliceBlue">
                <TextBlock FontSize="36" Text="{Binding CurrentVolume}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ScrollDown"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Grid>

        <RepeatButton Delay="500" Interval="100" Width="100" Height="40" Margin="0,160,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" Opacity="0.9">
            <TextBlock Text="MAX"/>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="VolumeMax"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </RepeatButton>
        <RepeatButton Delay="500" Interval="100" Width="100" Height="40" Margin="0,220,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" Opacity="0.9">
            <TextBlock Text="MUTE"/>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="VolumeMute"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </RepeatButton>
    </Grid>
</Window>
